Here repo contain Cluster-Autoscaler manifest

   Cluster-autoscaler- 
   • Create an IAM OIDC provider.
   • Create an IAM policy for Cluster Autoscaler.
   • Create an IAM role for Cluster Autoscaler.
   • Deploy Kubernetes Cluster Autoscaler.
   • Important tag -
       k8s.io/cluster-autoscaler/enabled=true
       k8s.io/cluster-autoscaler/<cluster-name>: "owned"
   • Deploy cluster autoscaler 
       ○ Serviceaccount  (OIDC)
       ○ Clusterrole 
       ○ Role
       ○ Clusterrolebinding
       ○ Rolebinding
       ○ Deployment (need changes the data according to cluster info)
Test and verify 




In Deplotment file do the changes : 
    1. changes cluster name 
    2. node affinity
    3. No_PROXY 
    4. image
IN serviceaccoint add role arn for clusterautoscler 


Role - AmazonEKSClusterAutoscalerRole 
policy - AWSClusterAutoscalerIAMPolicy
{
    "Statement": [
        {
            "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags",
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "ec2:DescribeLaunchTemplateVersions"
            ],
            "Effect": "Allow",
            "Resource": "*"
        }
    ],
    "Version": "2012-10-17"
}


Trust-Relationship -
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "Federated": "<OIDC-ARN>"
            },
            "Action": "sts:AssumeRoleWithWebIdentity",
            "Condition": {
                "StringEquals": {
                    "oidc.eks.ap-south-1.amazonaws.com/id/<OIDCMUNBER>:aud": "sts.amazonaws.com",
                    "oidc.eks.ap-south-1.amazonaws.com/id/<OIDCMUNBER>:sub": "system:serviceaccount:kube-system:cluster-autoscaler"
                }
            }
        }
    ]
}
